#!/bin/bash
# todo-scripts: Task Dashboard
# 
# Usage:
#   td
#
# Shows a dashboard of your todo.txt tasks, focusing on:
#   - üìå Today's tasks (due: today)
#   - ‚è∞ Overdue tasks (due: before today)
#
# The todo.txt file should be in the current directory as "todo.txt".
#
# Output columns:
#   Line   | Created    | Due Date     | Task
#
# Example:
#   ==== TASK DASHBOARD (2024-01-15) ====
#
#   üìå Today:
#   Line   | Created    | Due Date     | Task
#   ---------------------------------------------------------------------------------------------
#   3      | 2024-01-10 | 2024-01-15   | Review project proposal due:2024-01-15
#
#   ‚è∞ Overdue:
#   Line   | Created    | Due Date     | Task
#   ---------------------------------------------------------------------------------------------
#   1      | 2024-01-05 | 2024-01-10   | Send weekly report due:2024-01-10
#
# Mark tasks as completed using your preferred editor or the companion scripts.
# For more, see: https://github.com/adityajoshi/todo-scripts

show_help() {
  cat << EOF
todo-scripts: Task Dashboard

USAGE:
  td [OPTIONS]

DESCRIPTION:
  Display a dashboard of your todo.txt tasks, showing today's tasks and overdue items
  in a tabular format with line numbers for easy reference.

OPTIONS:
  -h, --help    Show this help message

OUTPUT:
  The dashboard shows two sections:
  ‚Ä¢ üìå Today: Tasks due today
  ‚Ä¢ ‚è∞ Overdue: Tasks past their due date

  Each task is displayed with:
  ‚Ä¢ Line: Line number in todo.txt (for use with 'md' command)
  ‚Ä¢ Created: Date when task was created
  ‚Ä¢ Due Date: When the task is due
  ‚Ä¢ Task: The task description

EXAMPLE:
  ==== TASK DASHBOARD (2024-01-15) ====

  üìå Today:
  Line   | Created    | Due Date     | Task
  ---------------------------------------------------------------------------------------------
  3      | 2024-01-10 | 2024-01-15   | Review project proposal due:2024-01-15

  ‚è∞ Overdue:
  Line   | Created    | Due Date     | Task
  ---------------------------------------------------------------------------------------------
  1      | 2024-01-05 | 2024-01-10   | Send weekly report due:2024-01-10

FILES:
  todo.txt    Task file (created automatically if it doesn't exist)

SEE ALSO:
  add(1) - Add new tasks
  md(1)  - Mark tasks as completed

For more information, visit: https://github.com/adityajoshi/todo-scripts
EOF
}

# Check for help flags
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  show_help
  exit 0
fi

TODO_FILE="todo.txt"
TODAY=$(date +%Y-%m-%d)

if [ ! -f "$TODO_FILE" ]; then
  echo "No todo.txt file found at $TODO_FILE"
  exit 1
fi

print_table() {
  # Args: filter_mode
  mode=$1
  awk -v today="$TODAY" -v mode="$mode" '
    function print_header() {
      printf "\n%-6s | %-10s | %-12s | %s\n", "Line", "Created", "Due Date", "Task"
      print "---------------------------------------------------------------------------------------------"
    }
    {
      crea="-"
      due="-"
      line=NR
      txt=$0

      if ($1 ~ /^[0-9]{4}-[0-9]{2}-[0-9]{2}$/) {
        crea=$1
        sub(/^[0-9]{4}-[0-9]{2}-[0-9]{2} /,"",txt)
      }
      if (match($0,/due:([0-9]{4}-[0-9]{2}-[0-9]{2})/,arr)) {
        due=arr[1]
      }

      if ($0 !~ /^x /) {
        if (mode=="today" && due==today) {
          if (!printed++) print_header()
          printf "%-6s | %-8s | %-12s | %s\n", line, crea, due, txt
        }
        else if (mode=="overdue" && due!="-") {
          if (due < today) {
            if (!printed++) print_header()
            printf "%-6s | %-8s | %-12s | %s\n", line, crea, due, txt
          }
        }
      }
    }
  ' "$TODO_FILE"
}

echo "==== TASK DASHBOARD ($TODAY) ===="

echo -e "\nüìå Today:"
print_table "today" || echo "  No tasks for today"

echo -e "\n‚è∞ Overdue:"
print_table "overdue" || echo "  No overdue tasks"
